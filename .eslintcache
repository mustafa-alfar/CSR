[{"/Users/mustafaalfar/Desktop/crs-project/src/index.js":"1","/Users/mustafaalfar/Desktop/crs-project/src/client/components/login/login.jsx":"2","/Users/mustafaalfar/Desktop/crs-project/src/client/components/error404/index.jsx":"3","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/jobs/addjob/index.jsx":"4","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employee/skills/index.jsx":"5","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employee/sidebar/sidebar.jsx":"6","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/jobs/img.jsx":"7","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/employeeprofile/img.jsx":"8","/Users/mustafaalfar/Desktop/crs-project/src/client/components/pages/success-stories/recentstories/index.jsx":"9","/Users/mustafaalfar/Desktop/crs-project/src/admin/components/dashboard/status/index.jsx":"10","/Users/mustafaalfar/Desktop/crs-project/src/approuter.jsx":"11","/Users/mustafaalfar/Desktop/crs-project/src/client/components/register/register.jsx":"12","/Users/mustafaalfar/Desktop/crs-project/src/admin/components/jobs/singlejob/index.jsx":"13","/Users/mustafaalfar/Desktop/crs-project/src/client/components/home/search/index.jsx":"14","/Users/mustafaalfar/Desktop/crs-project/src/admin/components/viewproposal/index.jsx":"15","/Users/mustafaalfar/Desktop/crs-project/src/admin/assets/js/script.js":"16","/Users/mustafaalfar/Desktop/crs-project/src/client/context/user.js":"17","/Users/mustafaalfar/Desktop/crs-project/src/client/components/footer.jsx":"18","/Users/mustafaalfar/Desktop/crs-project/src/client/components/forgot-password/index.jsx":"19","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/password/index.jsx":"20","/Users/mustafaalfar/Desktop/crs-project/src/client/components/loading/actionloading/index.jsx":"21","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/chat/img.jsx":"22","/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/sidebar/index.jsx":"23","/Users/mustafaalfar/Desktop/crs-project/src/admin/components/dashboard/appointment/index.jsx":"24"},{"size":980,"mtime":1610190526270,"results":"25","hashOfConfig":"26"},{"size":3502,"mtime":1610190526268,"results":"27","hashOfConfig":"26"},{"size":500,"mtime":1610190526264,"results":"28","hashOfConfig":"26"},{"size":11629,"mtime":1610190526262,"results":"29","hashOfConfig":"26"},{"size":7089,"mtime":1610190526261,"results":"30","hashOfConfig":"26"},{"size":3373,"mtime":1610190526261,"results":"31","hashOfConfig":"26"},{"size":858,"mtime":1610190526263,"results":"32","hashOfConfig":"26"},{"size":782,"mtime":1610190526262,"results":"33","hashOfConfig":"26"},{"size":1731,"mtime":1610190526269,"results":"34","hashOfConfig":"26"},{"size":1825,"mtime":1610190526215,"results":"35","hashOfConfig":"26"},{"size":752,"mtime":1610190526219,"results":"36","hashOfConfig":"26"},{"size":9004,"mtime":1610190526269,"results":"37","hashOfConfig":"26"},{"size":17472,"mtime":1610190526217,"results":"38","hashOfConfig":"26"},{"size":1902,"mtime":1610190526266,"results":"39","hashOfConfig":"26"},{"size":4986,"mtime":1610190526219,"results":"40","hashOfConfig":"26"},{"size":5600,"mtime":1610190526200,"results":"41","hashOfConfig":"26"},{"size":8305,"mtime":1610190526270,"results":"42","hashOfConfig":"26"},{"size":3544,"mtime":1610190526264,"results":"43","hashOfConfig":"26"},{"size":5592,"mtime":1610190526265,"results":"44","hashOfConfig":"26"},{"size":4002,"mtime":1610190526264,"results":"45","hashOfConfig":"26"},{"size":577,"mtime":1610190526267,"results":"46","hashOfConfig":"26"},{"size":779,"mtime":1610190526261,"results":"47","hashOfConfig":"26"},{"size":3478,"mtime":1610190526264,"results":"48","hashOfConfig":"26"},{"size":3719,"mtime":1610190526215,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17u837e",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":1,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mustafaalfar/Desktop/crs-project/src/index.js",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/login/login.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/error404/index.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/jobs/addjob/index.jsx",["102","103","104","105","106","107"],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employee/skills/index.jsx",["108","109","110"],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employee/sidebar/sidebar.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/jobs/img.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/employeeprofile/img.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/pages/success-stories/recentstories/index.jsx",["111"],"import React, {Component} from 'react';\nimport {IMG01} from '../img';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\n// context\nimport {JobConsumer} from \"../../../../context/jobs\";\n\nclass RecentStories extends Component{\n  render(){\n    return(\n      <div className=\"card post-widget\">\n        <div className=\"card-header\">\n          <h4 className=\"card-title\">Recent Stories</h4>\n        </div>\n        <div className=\"card-body\">\n          <ul className=\"latest-posts\">\n            <JobConsumer>\n              {(value)=>{ \n                const {successStories} = value;\n                return successStories.map(user=>{\n                  const {id, name, type, success_story, story_image} = user;\n                  const storyUrl = story_image? `http://joodya.com/crs/public/images/${story_image}` : IMG01;\n                  return(\n                    <li key={id}>\n                      <div className=\"post-thumb\">\n                        <Link to={`/success-stories/${id}`}>\n                          <img className=\"img-fluid\" src={storyUrl} alt=\"\" />\n                        </Link>\n                      </div>\n                      <div className=\"post-info\">\n                        <p><i className=\"fab fa-black-tie\"></i> {type===\"1\"? \"Employer\" : \"Employee\"}</p>\n                        <h4>\n                          <Link to={`/success-stories/${id}`}>{ReactHtmlParser(success_story, node=>node.textContent)}</Link>\n                        </h4>\n                      </div>\n                    </li>\n                  )\n                })\n              }}\n            </JobConsumer>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecentStories;",["112","113"],"/Users/mustafaalfar/Desktop/crs-project/src/admin/components/dashboard/status/index.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/approuter.jsx",["114"],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/register/register.jsx",["115","116","117","118","119"],"/Users/mustafaalfar/Desktop/crs-project/src/admin/components/jobs/singlejob/index.jsx",["120","121","122"],"import React, { Component } from 'react';\nimport SidebarNav from '../../sidebar';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport { Table } from \"antd\";\nimport 'antd/dist/antd.css';\nimport { itemRender, onShowSizeChange } from \"../../../components/paginationfunction\";\nimport { Modal} from 'react-bootstrap';\nimport IMG01 from '../../../assets/images/avatar-01.jpg';\n// context\nimport { AdminContext } from \"../../../context/admin\";\nimport ReactHtmlParser from 'react-html-parser';\nimport moment from \"moment\";\nimport ViewProposal from \"../../viewproposal\"\n\nclass SingleJob extends Component {\n\n  componentDidMount = () => {\n    const {getSingleJob, singleJob} = this.context;\n    const {id} = this.props.match.params;\n    if(singleJob.length===0){getSingleJob(id)};\n  }\n  state = {\n    key: 1,\n    activeModal: null,\n    proposal: {},\n\t}\n\t\t\n\thandleSelect = (key) => {\n\t\tconsole.log(\"selected \" + key);\n\t\tthis.setState({ key });\n\t}\n\n  openModal = (id) => {\n\t  this.setState({\n      activeModal: id\n    })\n  }\n  \n\tcloseModal = () => {\n\t\tthis.setState({activeModal: false}); \n  };\n\n  handleViewBtn = (proposal) => {\n    this.setState({proposal})\n    this.openModal(\"coverLetter\");\n  }\n  \n  render () {\n    const {singleJob, jobStatus, completeJob} = this.context;\n    const {job: {...job}, proposals: {...proposals}} = singleJob;\n    const {pending, accepted, selected, rejected} = proposals;\n    const {id, image, title, status, category: {... category}, employer: {...employer}, proposals_count, created_at, finish_at, details, requirements, responsibility} = job;\n    const imageUrl = image? `http://joodya.com/crs/public/images/${image}` : IMG01;\n    const categoryImgUrl = category.image? `http://joodya.com/crs/public/images/${category.image}` : IMG01;\n    const statusValue = jobStatus.toString() || status;\n    const statusName = statusValue === \"0\"? \"Opened Job\" : statusValue === \"1\"? \"Closed Job\" : statusValue === \"2\"? \"processed Job\" : \"completed Job\";\n    const columns = [\n      {\n        title: \"Employee Name\",\n        dataIndex: \"employee\",\n        render: ({name, photo}) => {\n          const photoUrl = photo? `http://joodya.com/crs/public/images/${photo}` : IMG01;\n          return (\n            <div className=\"table-avatar\">\n              <Link to=\"/admin/profile/employee\" className=\"avatar avatar-sm mr-2\">\n                <img alt=\"\" src={photoUrl} />\n              </Link>\n              <Link to=\"/admin/profile/employee\">{name}</Link>\n            </div>\n          )\n        },\n        sorter: (a, b) => a.employee.name.length - b.employee.name.length,\n      },\n      {\n        title: \"Posted At\",\n        dataIndex: \"created_at\",\n        render: (date) => (moment(date).format(\"YYYY-MM-DD\")),\n        sorter: (a, b) => a.created_at.length - b.created_at.length,\n      },\n      {\n        title: \"Seen\",\n        dataIndex: \"seen\",\n        className: \"text-center\",\n        render: (seen) => {\n          const seenClass =  seen === \"1\"? \"text-success\" : \"\";\n          return <i className={`far fa-eye d-block ${seenClass}`} ></i>;\n        },\n      },\n      {\n        title: \"Cover Letter\",\n        dataIndex: \"message\",\n        className: \"text-center\",\n        render: (message, record) => {\n        const {employee, status} = record;\n        const {photo} = employee\n        const photoUrl = photo? `http://joodya.com/crs/public/images/${photo}` : IMG01;\n        const proposal = {...employee, message, photoUrl, status};\n        return <button className=\"btn btn-sm bg-info-light\" onClick={()=>this.handleViewBtn(proposal)}>View</button>;\n        },\n      },\n    ];\n\n    return (\n      <>\n        <SidebarNav />\n        <div className=\"page-wrapper\">\n          <div className=\"content container-fluid\">\n        \n            <div className=\"page-header\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <h3 className=\"page-title\">{title}</h3>\n                  <ul className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><Link to=\"/admin\">Dashboard</Link></li>\n                    <li className=\"breadcrumb-item\">Jobs</li>\n                    <li className=\"breadcrumb-item active\">{title}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>       \n           \n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"doctor-widget\">\n                  <div className=\"doc-info-left\">\n                    <div className=\"doctor-img\">\n                      <img src={imageUrl} className=\"img-fluid\" alt=\"User\" />\n                    </div>\n                    <div className=\"doc-info-cont\">\n                      <h4 className=\"doc-name\">{title}</h4>\n                      <p className=\"doc-speciality\">MDS - Periodontology and Oral Implantology, BDS</p>\n                      <h5 className=\"doc-department\"><img src={categoryImgUrl} className=\"img-fluid\" alt=\"Category\" />{category.name}</h5>\n                      <ul className=\"entry-meta meta-item\">\n                        <li><i className=\"fas fa-sun\"></i> {statusName}</li>\n                        {/* <li><i className=\"fab fa-sketch\"></i> {categoryName}</li> */}\n                        <li><i className=\"fas fa-file-signature\"></i> {proposals_count} Proposals</li>\n                        <li><i className=\"fab fa-black-tie\"></i> By {employer.name}</li>\n                        <li><i className=\"fas fa-hourglass-start\"></i> {moment(created_at).format(\"YYYY-MM-DD\")}</li>\n                        <li><i className=\"fas fa-hourglass-end\"></i> {moment(finish_at).format(\"YYYY-MM-DD\")}</li>\n                      </ul>\n                    </div>\n                  </div>\n                  <div className=\"doc-info-right\">\n                    <div className=\"clinic-booking\">\n                      {\n                        statusValue === \"2\"?\n                          <button className=\"apt-btn\" onClick={()=>this.openModal('action')}>\n                            Complete Job\n                          </button>\n                        : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Tabs\n                  className=\"tab-view\"\n                  activeKey={this.state.key}\n                  onSelect={this.handleSelect}\n                  id=\"controlled-tab-example\"\n                >\n                  <Tab className=\"nav-item\" eventKey={1} title=\"Overview\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12 col-lg-9\">\n\n                        <div className=\"widget about-widget\">\n                          <h4 className=\"widget-title\">Description</h4>\n                          <article>{ReactHtmlParser(details)}</article>\n                        </div>\n\n                        <div className=\"widget education-widget\">\n                          <h4 className=\"widget-title\">Requirements</h4>\n                          <div className=\"experience-box\">\n                            <ul className=\"experience-list\">\n                              {\n                                (requirements && requirements.length>0)? requirements.map((item, index)=>{\n                                  return (\n                                    <li key={index}>\n                                      <div className=\"experience-user\">\n                                        <div className=\"before-circle\"></div>\n                                      </div>\n                                      <div className=\"experience-content\">\n                                        <div className=\"timeline-content\">\n                                          <p>{item}</p>\n                                        </div>\n                                      </div>\n                                    </li>\n                                  )\n                                }) : null\n                              }\n                            </ul>\n                          </div>\n                        </div>\n\n                        <div className=\"widget experience-widget\">\n                          <h4 className=\"widget-title\">Responsibilities</h4>\n                          <div className=\"experience-box\">\n                            <ul className=\"experience-list\">\n                              {\n                                (responsibility && responsibility.length>0)? responsibility.map((item, index)=>{\n                                  return (\n                                    <li key={index}>\n                                      <div className=\"experience-user\">\n                                        <div className=\"before-circle\"></div>\n                                      </div>\n                                      <div className=\"experience-content\">\n                                        <div className=\"timeline-content\">\n                                          <p>{item}</p>\n                                        </div>\n                                      </div>\n                                    </li>\n                                  )\n                                }) : null\n                              }\n                            </ul>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={2} title=\"Pending Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={pending}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: pending? pending.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={3} title=\"Accepted Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={accepted}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: accepted? accepted.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={4} title=\"Selected Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={selected}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: selected? selected.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={5} title=\"Rejected Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={rejected}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: rejected? rejected.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                </Tabs>\n              </div>\n            </div>\n\n            {/* cover letter modal */}\n            <ViewProposal proposal={this.state.proposal} activeModal={this.state.activeModal} closeModal={this.closeModal} />\n            {/* <Modal size=\"lg\" show={this.state.activeModal === 'coverLetter'} onHide={this.closeModal} centered>\n              <Modal.Header closeButton>\n              <h5 className=\"modal-title\">Cover Letter</h5>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <div className=\"doc-info-left\">\n                      <div className=\"doctor-img\">\n                        <img src={imageUrl} className=\"img-fluid\" alt=\"User\" />\n                      </div>\n                      <div className=\"doc-info-cont\">\n                        <h4 className=\"doc-name\">{title}</h4>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    {ReactHtmlParser(this.state.coverLetter)}\n                  </div>\n                </div>\n              </Modal.Body>\n            </Modal> */}\n\n            {/* action modal */}\n            <Modal show={this.state.activeModal === 'action'} onHide={this.closeModal} centered>\n              <Modal.Body className=\"text-center\">\n                <div className=\"form-content p-2\">\n                  <h4 className=\"modal-title\">Complete</h4>\n                  <p className=\"mb-4\">Are you sure want to complete?</p>\n                  <button type=\"button\" className=\"btn bg-success-light mr-2\" onClick={()=>{completeJob(id), this.closeModal()}}> OK </button>\n                  <button type=\"button\" className=\"btn bg-danger-light\" data-dismiss=\"modal\" onClick={this.closeModal}>Cancel</button>\n                </div>\n              </Modal.Body>\n            </Modal>\n\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nSingleJob.contextType = AdminContext;\nexport default SingleJob;",["123","124"],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/home/search/index.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/admin/components/viewproposal/index.jsx",["125"],"/Users/mustafaalfar/Desktop/crs-project/src/admin/assets/js/script.js",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/context/user.js",["126"],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/footer.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/forgot-password/index.jsx",["127"],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/password/index.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/loading/actionloading/index.jsx",["128"],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/chat/img.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/client/components/employer/sidebar/index.jsx",[],"/Users/mustafaalfar/Desktop/crs-project/src/admin/components/dashboard/appointment/index.jsx",[],{"ruleId":"129","severity":1,"message":"130","line":9,"column":8,"nodeType":"131","messageId":"132","endLine":9,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":10,"column":8,"nodeType":"131","messageId":"132","endLine":10,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":26,"column":6,"nodeType":"136","endLine":26,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":29,"column":70,"nodeType":"140","messageId":"141","endLine":29,"endColumn":72},{"ruleId":"142","severity":2,"message":"143","line":116,"column":47,"nodeType":"144","messageId":"145","endLine":116,"endColumn":80},{"ruleId":"146","severity":1,"message":"147","line":116,"column":63,"nodeType":"148","messageId":"149","endLine":116,"endColumn":64},{"ruleId":"134","severity":1,"message":"150","line":20,"column":6,"nodeType":"136","endLine":20,"endColumn":8,"suggestions":"151"},{"ruleId":"142","severity":2,"message":"143","line":169,"column":97,"nodeType":"144","messageId":"145","endLine":169,"endColumn":126},{"ruleId":"146","severity":1,"message":"147","line":169,"column":112,"nodeType":"148","messageId":"149","endLine":169,"endColumn":113},{"ruleId":"129","severity":1,"message":"152","line":21,"column":30,"nodeType":"131","messageId":"132","endLine":21,"endColumn":34},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":2,"message":"158","line":8,"column":1,"nodeType":"159","endLine":8,"endColumn":71,"fix":"160"},{"ruleId":"138","severity":1,"message":"139","line":38,"column":70,"nodeType":"140","messageId":"141","endLine":38,"endColumn":72},{"ruleId":"142","severity":2,"message":"143","line":92,"column":31,"nodeType":"144","messageId":"145","endLine":92,"endColumn":69},{"ruleId":"146","severity":1,"message":"147","line":92,"column":52,"nodeType":"148","messageId":"149","endLine":92,"endColumn":53},{"ruleId":"142","severity":2,"message":"143","line":127,"column":35,"nodeType":"144","messageId":"145","endLine":127,"endColumn":73},{"ruleId":"146","severity":1,"message":"147","line":127,"column":56,"nodeType":"148","messageId":"149","endLine":127,"endColumn":57},{"ruleId":"161","severity":1,"message":"162","line":53,"column":52,"nodeType":"163","messageId":"164","endLine":53,"endColumn":53,"fix":"165"},{"ruleId":"142","severity":2,"message":"143","line":378,"column":93,"nodeType":"144","messageId":"145","endLine":378,"endColumn":127},{"ruleId":"146","severity":1,"message":"147","line":378,"column":108,"nodeType":"148","messageId":"149","endLine":378,"endColumn":109},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"129","severity":1,"message":"168","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":75,"column":25,"nodeType":"140","messageId":"141","endLine":75,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":29,"column":5,"nodeType":"171","messageId":"172","endLine":46,"endColumn":6},{"ruleId":"129","severity":1,"message":"168","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":27},"no-unused-vars","'CKEditor' is defined but never used.","Identifier","unusedVar","'ClassicEditor' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategoriesListToken'. Either include it or remove the dependency array.","ArrayExpression",["173"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'getSkills'. Either include it or remove the dependency array.",["174"],"'name' is assigned a value but never used.","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"177","text":"178"},"rest-spread-spacing","Unexpected whitespace after rest property operator.","ExperimentalRestProperty","unexpectedWhitespace",{"range":"179","text":"180"},["175"],["176"],"'useContext' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"no-global-assign","no-unsafe-negation",[0,397],"import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import AppContainer from './appcontainer.jsx';\nimport UserProvider from \"./client/context/user\";\nimport JobProvider from \"./client/context/jobs\";\n\nimport SystemLoading from \"./client/components/loading/systemloading\";\nconst AppContainer = lazy(() => import('./appcontainer.jsx'));",[1487,1488],"","Update the dependencies array to be: [getCategoriesListToken]",{"range":"185","text":"186"},"Update the dependencies array to be: [getSkills]",{"range":"187","text":"188"},[991,993],"[getCategoriesListToken]",[661,663],"[getSkills]"]